name:        "Mongo Acorn"
description: "Acorn providing MongoDB"
readme:      "./README.md"
info:        localData.info
icon:        "./icon.png"

args: {
	// Name of the default database
	dbName: "mydb"

	// Name of the default user
	dbUser: ""
}

services: db: {
	default:   true
	container: "mongodb"
	secrets: ["admin", "user"]
	ports: "27017"
	data: {
		dbName: args.dbName
		proto:  "mongodb"
	}
}

containers: mongodb: {
	name:        "MongoDB"
	description: "Container running a MongoDB server"
	image:       "mongo:6.0"
	ports:       "27017/tcp"
	env: {
		MONGO_INITDB_ROOT_USERNAME: "secret://admin/username"
		MONGO_INITDB_ROOT_PASSWORD: "secret://admin/password"
		REPLICA_SET_KEY:            "secret://replica-set-key/token"
	}
	entrypoint: ["/acorn/scripts/start-mongodb.sh"]
	dirs: {
		"/acorn/scripts": "./scripts"
		"/data/db":       "volume://mongodb-data"
	}
	probes: [
		{
			type:                "liveness"
			initialDelaySeconds: 10
			timeoutSeconds:      5
			tcp: {
				url: "tcp://localhost:27017"
			}
		},
	]
}

jobs: {
	"init-db": {
		image: "mongo:6.0"
		env: {
			MONGO_INITDB_ROOT_USERNAME: "secret://admin/username"
			MONGO_INITDB_ROOT_PASSWORD: "secret://admin/password"
			MONGO_USERNAME:             "secret://user/username"
			MONGO_PASSWORD:             "secret://user/password"
			MONGO_HOST:                 "mongodb"
			MONGO_DATABASE:             args.dbName
		}
		dependsOn: ["mongodb"]
		entrypoint: ["/acorn/scripts/render.sh"]
		dirs: "/acorn/scripts": "./scripts"
		files: {
			"/var/run/replica-set": """
   {
      _id: "rs0",
      version: 1,
      members: [ { _id: 0, host: "mongodb:27017" } ]
   }
		"""
		}
	}
}

volumes: "mongodb-data": {}

secrets: {
	"replica-set-key": type: "token"

	admin: {
		name: "credentials of the admin user"
		type: "basic"
		params: {
			passwordLength:     10
			passwordCharacters: "A-Za-z0-9"
		}
		data: {
			username: "root"
			password: ""
		}
	}

	user: {
		name: "credentials of the additional user"
		type: "basic"
		params: {
			usernameLength:     7
			usernameCharacters: "a-z"
			passwordLength:     10
			passwordCharacters: "A-Za-z0-9"
		}
		data: {
			username: std.ifelse(args.dbUser != "", args.dbUser, "")
			password: ""
		}
	}
}

localData: info: """
	## Usage

	services: db: {
		image: "ghcr.io/acorn-io/mongodb:v#.#-#"
	}

	containers: app: {
		image: "app-image"
		env: {
		  DB_HOST: "@{@{service.}db.address}"
		  DB_PORT: "@{@{service.}db.port.27017}"
		  DB_NAME: "@{@{service.}db.data.dbName}"
		  DB_USER: "@{@{service.}db.secrets.user.username}"
		  DB_PASS: "@{@{service.}db.secrets.user.password}"
		}
	}
	"""
