name:        "Mongo Acorn"
description: "Acorn providing MongoDB"
readme:      "./README.md"
info:        localData.info
icon:        "./icon.png"

args: {
  // Name of the default database
  dbName: "mydb"

  // Name of the default user
  dbUser: ""
}

services: db: {
	default:   true
	container: "mongodb"
	secrets: ["admin", "user"]
	ports: "27017"
	data: dbName: args.dbName
}

containers: {
  mongodb: {
    name: "MongoDB"
    description: "Container running a MongoDB server"
    image: "mongo:6.0"
    ports: "27017/tcp"
    env: {
      MONGO_INITDB_ROOT_USERNAME: "secret://admin/username"
      MONGO_INITDB_ROOT_PASSWORD: "secret://admin/password"
    }
    dirs: {
      "/data/db": "volume://db-data"
    }
    probes: [
      {
        type:                "liveness"
        initialDelaySeconds: 10
        timeoutSeconds:      5
        tcp:{
          url: "tcp://localhost:27017"
        }
      },   
    ]
  }
}

volumes: {
  "db-data": {}
}

jobs: "create-user": {
  build: context: "."
  env: {
    MONGO_INITDB_ROOT_USERNAME: "secret://admin/username"
    MONGO_INITDB_ROOT_PASSWORD: "secret://admin/password"
    MONGO_USERNAME: "secret://user/username"
    MONGO_PASSWORD: "secret://user/password"
    MONGO_DATABASE: args.dbName
  }
}

secrets: {
    admin: {
        name: "credentials of the admin user"
        type: "basic"
        params: {
            passwordLength: 10
            passwordCharacters: "a-Z0-9"
        }
        data: {  
            username: "root"
            password: ""
        }
    }
}

secrets: {
    user: {
        name: "credentials of the additional user"
        type: "basic"
        params: {
            usernameLength: 7
            usernameCharacters: "a-z"
            passwordLength: 10
            passwordCharacters: "a-Z0-9"
        }
        data: {  
            username: std.ifelse(args.dbUser != "", args.dbUser, "")
            password: ""
        }
    }
}

localData: readinessProbeCommand: [
  "bash",
  "-c",
  "mongosh --quiet --eval \"db.adminCommand('ping')\""
]

localData: info: """
	## Usage

	services: db: {
		image: "ghcr.io/acorn-io/mongodb:v#.#-#"
	}

	containers: app: {
		image: "app-image"
		env: {
		  DB_HOST: "@{@{service.}db.address}"
		  DB_PORT: "@{@{service.}db.port.27017}"
		  DB_NAME: "@{@{service.}db.data.dbName}"
		  DB_USER: "@{@{service.}db.secrets.user.username}"
		  DB_PASS: "@{@{service.}db.secrets.user.password}"
		}
	}
	"""

